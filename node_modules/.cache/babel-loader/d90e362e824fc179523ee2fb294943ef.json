{"ast":null,"code":"var _jsxFileName = \"/home/mishkatonik/Documents/kickstart/UFO React/ufo-sightings-graph/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css'; // fetch JSON data and hold it in this const, then put it in the state below\n// const availableStates = \n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      availableStates: [{\n        \"state\": \"ak\",\n        \"sightings\": 319\n      }, {\n        \"state\": \"al\",\n        \"sightings\": 642\n      }, {\n        \"state\": \"ar\",\n        \"sightings\": 588\n      }],\n      selectedStates: []\n    };\n\n    this.componentDidMount = () => {\n      fetch(\"http://ufo-api.herokuapp.com/api/sightings/search?state=ny\").then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.onStateSelect = index => {\n      console.log('getting state selection...'); // copy both arrays for manipulation\n\n      const availableStates = this.state.availableStates.slice();\n      const selectedStates = this.state.selectedStates.slice(); //indicate which state is being selected\n\n      const desiredState = this.state.availableStates[index]; // check if the desiredState is already selected\n\n      if (selectedStates.indexOf(desiredState) > -1) {\n        return;\n      } else {\n        // add the state to selected\n        selectedStates.push(desiredState); // update state and re-render\n\n        this.setState({\n          availableStates: availableStates,\n          selectedStates: selectedStates\n        });\n      }\n    };\n\n    this.removeStateSelect = index => {\n      console.log('removing state from selection...'); // copy both arrays for manipulation\n\n      const availableStates = this.state.availableStates.slice();\n      const selectedStates = this.state.selectedStates.slice(); //indicate which state is being removed\n\n      const desiredState = this.state.availableStates[index]; //remove the state from selected\n\n      selectedStates.splice(index, 1); // update state and re-render\n\n      this.setState({\n        availableStates: availableStates,\n        selectedStates: selectedStates\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"NavBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"UFO Sightings by State\"), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"NavBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"NavBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"About\")), React.createElement(\"div\", {\n      className: \"StateCheckboxContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.state.availableStates.map((stateInfo, index) => React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"checkboxItem\",\n      value: stateInfo.state,\n      onClick: () => this.onStateSelect(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), stateInfo.state))), React.createElement(\"div\", {\n      className: \"graphContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // check if an item exists in an array:\n// var arr = [\"steve\", \"bob\", \"john\"];\n// console.log(arr.indexOf(\"bob\") > -1);    ----> returns true","map":{"version":3,"sources":["/home/mishkatonik/Documents/kickstart/UFO React/ufo-sightings-graph/src/App.js"],"names":["React","Component","App","state","availableStates","selectedStates","componentDidMount","fetch","then","response","json","data","console","log","onStateSelect","index","slice","desiredState","indexOf","push","setState","removeStateSelect","splice","render","map","stateInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n// fetch JSON data and hold it in this const, then put it in the state below\n// const availableStates = \n\n\nclass App extends Component {\n  state = {\n    availableStates: \n      [\n        {\n          \"state\": \"ak\",\n          \"sightings\": 319\n        },\n        {\n          \"state\": \"al\",\n          \"sightings\": 642\n        },\n        {\n          \"state\": \"ar\",\n          \"sightings\": 588\n        }\n      ],\n    selectedStates: [],\n  }\n\n  componentDidMount = () => {\n    fetch(\"http://ufo-api.herokuapp.com/api/sightings/search?state=ny\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n    });\n  }\n\n\n// modified from quiditch activity, 4.1 activity 1\n  onStateSelect = (index) => {\n    console.log('getting state selection...');\n\n    // copy both arrays for manipulation\n    const availableStates = this.state.availableStates.slice();\n    const selectedStates = this.state.selectedStates.slice();\n    \n    //indicate which state is being selected\n    const desiredState = this.state.availableStates[index];\n\n    // check if the desiredState is already selected\n    if (selectedStates.indexOf(desiredState) > -1) {\n      \n      return;\n\n    } else {\n    \n    // add the state to selected\n    selectedStates.push(desiredState);\n    \n    // update state and re-render\n    this.setState({\n      availableStates: availableStates,\n      selectedStates: selectedStates,\n    }); \n    } \n  }\n\n  removeStateSelect = (index) => {\n    console.log('removing state from selection...')\n\n    // copy both arrays for manipulation\n    const availableStates = this.state.availableStates.slice();\n    const selectedStates = this.state.selectedStates.slice();\n    \n    //indicate which state is being removed\n    const desiredState = this.state.availableStates[index];\n    \n    //remove the state from selected\n    selectedStates.splice(index, 1);\n        \n    // update state and re-render\n    this.setState({\n      availableStates: availableStates,\n      selectedStates: selectedStates,\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div className=\"NavBar\">\n          <h1>UFO Sightings by State</h1>\n          <a href=\"#\" className=\"NavBtn\">Home</a>\n          <a href=\"#\" className=\"NavBtn\">About</a>\n        </div>\n\n        <div className=\"StateCheckboxContainer\">\n          {\n              this.state.availableStates.map((stateInfo, index) => (\n                  <label>\n                    <input \n                      type=\"checkbox\" \n                      className=\"checkboxItem\"\n                      value={stateInfo.state}\n                      onClick={\n                        () => this.onStateSelect(index)\n                      } />\n                    {stateInfo.state}\n                  </label>\n              ))\n          }\n        </div>\n\n        <div className=\"graphContainer\">\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n// check if an item exists in an array:\n\n// var arr = [\"steve\", \"bob\", \"john\"];\n// console.log(arr.indexOf(\"bob\") > -1);    ----> returns true\n"]},"metadata":{},"sourceType":"module"}